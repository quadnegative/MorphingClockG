#include <Arduino.h>
#include <ArduinoJson.h>
#include <WiFiManager.h>

const char morphjs[] PROGMEM = (R"=====(
var configLoading=!1;function componentToHex(e){var o=e.toString(16);return 1==o.length?"0"+o:o}function rgbToHex(e,o,t){return"#"+componentToHex(e)+componentToHex(o)+componentToHex(t)}function hexToRgb(e){var o=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return o?{r:parseInt(o[1],16),g:parseInt(o[2],16),b:parseInt(o[3],16)}:null}function loadConfig(){configLoading=!0,$("#modalLabel")[0].innerText="Loading",$(".modal-footer").hide(),$(".modal").modal("show"),$.getJSON("/config",(function(e){jQuery.isEmptyObject({configJSON:e})||($("#ConfigJSON")[0].innerText=JSON.stringify(e,null,4),e.TimeZone&&(e.TimeZone.includes("ST")?($("#"+e.TimeZone)[0].checked=!0,$("#CustomTZOffset").hide()):($("#CustomTZ")[0].checked=!0,$("#CustomTZOffset")[0].value=e.TimeZone)),e.DST&&($("#DST")[0].checked=!0),e.Military&&($("#Military")[0].checked=!0),e.Metric?$("#Celsius")[0].checked=!0:e.Metric||($("#Fahrenheit")[0].checked=!0),e.WeatherAnimation&&($("#WeatherAnimation")[0].checked=!0),e.ColorPalette&&($('*[data-palette="'+e.ColorPalette+'"]')[0].checked=!0,$('input[name="ColorPalette"]:checked:enabled')[0].id.includes("Custom")?$("#ColorInput").show():$("#ColorInput").hide()),e.Brightness&&($('*[data-brightness="'+e.Brightness+'"]')[0].checked=!0),e.apiKey&&($("#apiKey")[0].value=e.apiKey),e.GeoLocation&&($("#GeoLocation")[0].value=e.GeoLocation),e.SSID&&($("#SSID")[0].value=e.SSID),e.Password&&($("#Password")[0].value=e.Password),e.NTPServer&&($("#NTPServer")[0].value=e.NTPServer),e.Hostname&&($("#Hostname")[0].value=e.Hostname))})).done((function(){$(".modal").modal("hide")})).fail((function(){$(".modal-body")[0].innerHTML="<p>Load Failed!</p>"})),configLoading=!1}function updateConfigJSON(){configLoading||(configJSON={},$("#ConfigJSON")[0].innerText&&(configJSON=JSON.parse($("#ConfigJSON")[0].innerText)),"CustomTZ"==$('input[name="TimeZone"]:checked:enabled')[0].id?($("#CustomTZOffset").show(),configJSON.TimeZone=$('input[id="CustomTZOffset"]')[0].value):($("#CustomTZOffset").hide(),configJSON.TimeZone=$('input[name="TimeZone"]:checked:enabled')[0].id),configJSON.DST=$('input[id="DST"]')[0].checked,configJSON.Military=$('input[id="Military"]')[0].checked,"false"==$('input[name="TemperatureUnit"]:checked:enabled')[0].dataset.value?configJSON.Metric=!1:configJSON.Metric=!0,configJSON.WeatherAnimation=$('input[id="WeatherAnimation"]')[0].checked,configJSON.ColorPalette=$('input[name="ColorPalette"]:checked:enabled')[0].dataset.palette,$('input[name="ColorPalette"]:checked:enabled')[0].id.includes("Custom")?($("#ColorInput").show(),configJSON["ColorPalette"+$('input[name="ColorPalette"]:checked:enabled')[0].dataset.palette]={time:hexToRgb($('input[id="TimeColorInput"]')[0].value),wind:hexToRgb($('input[id="WindColorInput"]')[0].value),date:hexToRgb($('input[id="DateColorInput"]')[0].value),weather:hexToRgb($('input[id="WeatherColorInput"]')[0].value)}):$("#ColorInput").hide(),configJSON.Brightness=$('input[name="Brightness"]:checked:enabled')[0].dataset.brightness,configJSON.apiKey=$('input[id="apiKey"]')[0].value,configJSON.GeoLocation=$('input[id="GeoLocation"]')[0].value,configJSON.SSID=$('input[id="SSID"]')[0].value,configJSON.Password=$('input[id="Password"]')[0].value,configJSON.NTPServer=$('input[id="NTPServer"]')[0].value,configJSON.Hostname=$('input[id="Hostname"]')[0].value.toLowerCase(),configJSON.DateFormat="M.D.Y",$("#ConfigJSON")[0].innerText=JSON.stringify(configJSON,null,4),$('*[data-palette="'+configJSON.ColorPalette+'"]')[0].checked=!0,$('input[name="ColorPalette"]:checked:enabled')[0].id.includes("Custom")?($("#ColorInput").show(),$('input[id="TimeColorInput"]')[0].value=rgbToHex(configJSON["ColorPalette"+configJSON.ColorPalette].time.r,configJSON["ColorPalette"+configJSON.ColorPalette].time.g,configJSON["ColorPalette"+configJSON.ColorPalette].time.b),$('input[id="WindColorInput"]')[0].value=rgbToHex(configJSON["ColorPalette"+configJSON.ColorPalette].wind.r,configJSON["ColorPalette"+configJSON.ColorPalette].wind.g,configJSON["ColorPalette"+configJSON.ColorPalette].wind.b),$('input[id="DateColorInput"]')[0].value=rgbToHex(configJSON["ColorPalette"+configJSON.ColorPalette].date.r,configJSON["ColorPalette"+configJSON.ColorPalette].date.g,configJSON["ColorPalette"+configJSON.ColorPalette].date.b),$('input[id="WeatherColorInput"]')[0].value=rgbToHex(configJSON["ColorPalette"+configJSON.ColorPalette].weather.r,configJSON["ColorPalette"+configJSON.ColorPalette].weather.g,configJSON["ColorPalette"+configJSON.ColorPalette].weather.b)):$("#ColorInput").hide())}function saveConfig(){$("#modalLabel")[0].innerText="Saving",$(".modal-footer").hide(),$(".modal").modal("show");var e=$("#ConfigJSON")[0].innerText;const o={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(JSON.parse(e))};fetch("/config",o).then((e=>{$(".modal").modal("hide")})).catch((e=>{$(".modal-body")[0].innerHTML="<p>Save Failed!</p>"}))}function resetConfig(){$(".modal-footer").hide(),$("#modalLabel")[0].innerText="Reseting",$(".modal-body")[0].innerHTML='<div class="spinner-border" role="status" id="spinner"></div>',reset={},reset.ConfigReset="true",resetJSON=JSON.stringify(reset,null,4);const e={method:"POST",headers:{"Content-Type":"application/json"},body:resetJSON};fetch("/reset",e).then((e=>{setTimeout((function(){}),2e4),location.reload()})).catch((e=>{$(".modal-body")[0].innerHTML="<p>Reset Failed!</p>"}))}function resetModal(){$("#modalLabel")[0].innerText="Reset Config",$(".modal-body")[0].innerHTML="<p>This will clear the crrent config and restore the default values from the params.h file.</p><br><p>Are you sure you want to continue?</p>",$(".modal-footer").show(),$(".modal").modal("show")}$(window).on("load",(function(){loadConfig()}));
)=====");

void morphJS2(WiFiClient httpcli) {
    httpcli.println(F("HTTP/1.1 200 OK"));
    httpcli.println(F("Content-Type: text/javascript"));
    httpcli.println(F("Access-Control-Allow-Origin: *"));
    httpcli.println(F("Connection: close"));  // the connection will be closed after completion of the response
    httpcli.println(F(""));
    httpcli.println(morphjs);
    // give the web browser time to receive the data
    delay(1);
    // close the connection:
    httpcli.stop();
    return;
}

const char index_html[] PROGMEM = (R"=====(
<!doctype html><html lang="en"><head><meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1"><link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous"><title>MORPH CLOCK CONFIG</title></head><body><div class="container-fluid"><header class="d-flex flex-wrap justify-content-center py-3 mb-4 border-bottom"><a href="/" class="d-flex align-items-center mb-3 mb-md-0 me-md-auto text-dark text-decoration-none"><svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-clock-fill" viewBox="0 0 16 16"><path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71z"/></svg><span class="fs-4">MORPH CLOCK CONFIG</span></a></header><div class="row"><div class="col col-4"><div class="card"><div class="card-body"><h5 class="card-title">Time Zone</h5><div class="form-check"><input class="form-check-input" type="radio" name="TimeZone" id="EST" onchange="updateConfigJSON()"><label class="form-check-label" for="EST">Eastern Standard Time</label></div><div class="form-check"><input class="form-check-input" type="radio" name="TimeZone" id="CST" onchange="updateConfigJSON()"><label class="form-check-label" for="CST">Central Standard Time</label></div><div class="form-check"><input class="form-check-input" type="radio" name="TimeZone" id="MST" onchange="updateConfigJSON()"><label class="form-check-label" for="MST">Mountain Standard Time</label></div><div class="form-check"><input class="form-check-input" type="radio" name="TimeZone" id="PST" onchange="updateConfigJSON()"><label class="form-check-label" for="PST">Pacific Standard Time</label></div><div class="form-check"><input class="form-check-input" type="radio" name="TimeZone" id="AST" onchange="updateConfigJSON()"><label class="form-check-label" for="AST">Alaska Standard Time</label></div><div class="form-check"><input class="form-check-input" type="radio" name="TimeZone" id="HAST" onchange="updateConfigJSON()"><label class="form-check-label" for="HAST">Hawaii-Aleutian Standard Time</label></div><div class="form-check"><input class="form-check-input" type="radio" name="TimeZone" id="CustomTZ" onchange="updateConfigJSON()"><label class="form-check-label" for="CustomTZ">Custom (UTC offset eg, -5)</label><input type="text" class="form-control" id="CustomTZOffset" placeholder="UTC Offset" onchange="updateConfigJSON()"></div></div></div><div class="card"><div class="card-body"><h5 class="card-title">Daylight Savings</h5><div class="form-check form-switch"><input class="form-check-input" type="checkbox" id="DST" onchange="updateConfigJSON()"><label class="form-check-label" for="DST"></label></div></div></div><div class="card"><div class="card-body"><h5 class="card-title">Military Time</h5><div class="form-check form-switch"><input class="form-check-input" type="checkbox" id="Military" onchange="updateConfigJSON()"><label class="form-check-label" for="Military"></label></div></div></div></div><div class="col col-4"><div class="card"><div class="card-body"><h5 class="card-title">Temperature Unit</h5><div class="form-check"><input class="form-check-input" type="radio" name="TemperatureUnit" id="Fahrenheit" data-value="false" onchange="updateConfigJSON()"><label class="form-check-label" for="Fahrenheit">Fahrenheit</label></div><div class="form-check"><input class="form-check-input" type="radio" name="TemperatureUnit" id="Celsius" data-value="true" onchange="updateConfigJSON()"><label class="form-check-label" for="Celsius">Celsius</label></div></div></div><div class="card"><div class="card-body"><h5 class="card-title">Weather Animation</h5><div class="form-check form-switch"><input class="form-check-input" type="checkbox" id="WeatherAnimation" onchange="updateConfigJSON()"><label class="form-check-label" for="WeatherAnimation"></label></div></div></div></div><div class="col col-4"><div class="card"><div class="card-body"><h5 class="card-title">Color Palette</h5><div class="row"><div class="col col-6"><div class="form-check"><input class="form-check-input" type="radio" name="ColorPalette" id="Cyan" data-palette="0" onchange="updateConfigJSON()"><label class="form-check-label" for="Cyan">Cyan</label></div><div class="form-check"><input class="form-check-input" type="radio" name="ColorPalette" id="Red" data-palette="1" onchange="updateConfigJSON()"><label class="form-check-label" for="Red">Red</label></div><div class="form-check"><input class="form-check-input" type="radio" name="ColorPalette" id="Blue" data-palette="2" onchange="updateConfigJSON()"><label class="form-check-label" for="Blue">Blue</label></div><div class="form-check"><input class="form-check-input" type="radio" name="ColorPalette" id="Yellow" data-palette="3" onchange="updateConfigJSON()"><label class="form-check-label" for="Yellow">Yellow</label></div><div class="form-check"><input class="form-check-input" type="radio" name="ColorPalette" id="BrightBlue" data-palette="4" onchange="updateConfigJSON()"><label class="form-check-label" for="BrightBlue">Bright Blue</label></div><div class="form-check"><input class="form-check-input" type="radio" name="ColorPalette" id="Orange" data-palette="5" onchange="updateConfigJSON()"><label class="form-check-label" for="Orange">Orange</label></div><div class="form-check"><input class="form-check-input" type="radio" name="ColorPalette" id="Green" data-palette="6" onchange="updateConfigJSON()"><label class="form-check-label" for="Green">Green</label></div><div class="form-check"><input class="form-check-input" type="radio" name="ColorPalette" id="Custom1" data-palette="7" onchange="updateConfigJSON()"><label class="form-check-label" for="Custom1">Custom 1</label></div><div class="form-check"><input class="form-check-input" type="radio" name="ColorPalette" id="Custom2" data-palette="8" onchange="updateConfigJSON()"><label class="form-check-label" for="Custom2">Custom 2</label></div><div class="form-check"><input class="form-check-input" type="radio" name="ColorPalette" id="Custom3" data-palette="9" onchange="updateConfigJSON()"><label class="form-check-label" for="Custom3">Custom 3</label></div><div class="form-check"><input class="form-check-input" type="radio" name="ColorPalette" id="Custom4" data-palette="10" onchange="updateConfigJSON()"><label class="form-check-label" for="Custom4">Custom 4</label></div></div><div class="col col-6"><div id="ColorInput"><label for="TimeColorInput" class="form-label">Time</label><input type="color" class="form-control form-control-color" id="TimeColorInput" value="#563d7c" title="Choose time color" onchange="updateConfigJSON()"><label for="WindColorInput" class="form-label">Wind</label><input type="color" class="form-control form-control-color" id="WindColorInput" value="#563d7c" title="Choose wind color" onchange="updateConfigJSON()"><label for="DateColorInput" class="form-label">Date</label><input type="color" class="form-control form-control-color" id="DateColorInput" value="#563d7c" title="Choose date color" onchange="updateConfigJSON()"><label for="WeatherColorInput" class="form-label">Weather</label><input type="color" class="form-control form-control-color" id="WeatherColorInput" value="#563d7c" title="Choose weather color" onchange="updateConfigJSON()"></div></div></div></div></div><div class="card"><div class="card-body"><h5 class="card-title">Brightness</h5><div class="form-check"><input class="form-check-input" type="radio" name="Brightness" id="BrightnessAuto" data-brightness="Auto" onchange="updateConfigJSON()"><label class="form-check-label" for="BrightnessAuto">Auto</label></div><div class="form-check"><input class="form-check-input" type="radio" name="Brightness" id="Brightness70" data-brightness="70" onchange="updateConfigJSON()"><label class="form-check-label" for="Brightness70">70</label></div><div class="form-check"><input class="form-check-input" type="radio" name="Brightness" id="Brightness35" data-brightness="35" onchange="updateConfigJSON()"><label class="form-check-label" for="Brightness35">35</label></div><div class="form-check"><input class="form-check-input" type="radio" name="Brightness" id="BrightnessOff" data-brightness="0" onchange="updateConfigJSON()"><label class="form-check-label" for="BrightnessOff">Off</label></div></div></div></div></div><div class="row"><div class="col col-4"><div class="card"><div class="card-body"><h5 class="card-title">Open Weather Map</h5><p class="card-text"><a href="https://www.openweathermap.org" target="_blank">openweathermap.org</a></p><label for="apiKey" class="form-label">API key</label><input type="text" class="form-control" id="apiKey" placeholder="API key" onchange="updateConfigJSON()"><label for="GeoLocation" class="form-label">Geo Location: City,Country</label><input type="text" class="form-control" id="GeoLocation" placeholder="City,Country" onchange="updateConfigJSON()"></div></div></div><div class="col col-4"><div class="card"><div class="card-body"><h5 class="card-title">WiFi</h5><label for="SSID" class="form-label">SSID</label><input type="text" class="form-control" id="SSID" placeholder="SSID" onchange="updateConfigJSON()"><label for="Password" class="form-label">Password</label><input type="text" class="form-control" id="Password" placeholder="Password" onchange="updateConfigJSON()"></div></div></div><div class="col col-4"><div class="card"><div class="card-body"><h5 class="card-title">Hostname</h5><input type="text" class="form-control" id="Hostname" placeholder="Hostname" onchange="updateConfigJSON()"></div></div><div class="card"><div class="card-body"><h5 class="card-title">NTP Server</h5><input type="text" class="form-control" id="NTPServer" placeholder="NTP Server" onchange="updateConfigJSON()"></div></div></div></div><div class="row"><div class="col col-12"><button type="button" class="btn btn-primary" onclick="saveConfig()">Save</button><button type="button" class="btn btn-danger" onclick="resetModal()">Reset Config</button></div></div><div class="row"><div class="col col-12"><div class="accordion accordion-flush" id="accordionConfigJSON"><div class="accordion-item"><h2 class="accordion-header" id="flush-headingOne"><button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseOne" aria-expanded="false" aria-controls="flush-collapseOne">Config JSON</button></h2><div id="flush-collapseOne" class="accordion-collapse collapse" aria-labelledby="flush-headingOne" data-bs-parent="#accordionConfigJSON"><div class="accordion-body"><div id="ConfigJSON"></div></div></div></div></div></div></div><div class="modal" id="loading" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true"><div class="modal-dialog modal-dialog-centered"><div class="modal-content"><div class="modal-header"><h5 class="modal-title" id="modalLabel"></h5><button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button></div><div class="modal-body"><div class="spinner-border" role="status" id="spinner"></div></div><div class="modal-footer"><button type="button" class="btn btn-primary" data-bs-dismiss="modal">No</button><button type="button" class="btn btn-danger" onclick="resetConfig()">Yes</button></div></div></div></div></div><script defer="defer" src="https://cdn.jsdelivr.net/npm/jquery@3.7.1/dist/jquery.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script><script defer="defer" src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script><script defer="defer" src="morph.js" type="text/javascript"></script></body></html>
)=====");

void index2(WiFiClient httpcli) {
    httpcli.println(F("HTTP/1.1 200 OK"));
    httpcli.println(F("Content-type: text/html"));
    httpcli.println(F("Access-Control-Allow-Origin: *"));
    httpcli.println(F("Connection: close"));  // the connection will be closed after completion of the response
    httpcli.println(F(""));
    httpcli.println(index_html);
    // give the web browser time to receive the data
    delay(1);
    // close the connection:
    httpcli.stop();
}